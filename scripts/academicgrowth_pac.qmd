---
title: "Final Project"
author: "Will, Marcus, Saratessa"
format: html
editor: visual
---

```{r}
setwd("/Users/saratessapalos/Desktop/EDLDClassProject/EDLD651ClassProject/data")

data <- read.csv("updated.csv")
```

```{r}
library(readr)
data <- read_csv("C:/Users/Administrator/Desktop/Final Project/updated_repo/data/updated.csv")
View(data)
```

```{r}
library(here)
library(readr)

data <- read_csv(here("data", "updated.csv"))
#you probably dont need this two times in your code becuase it does the same thing as the code chunk below
```
I like how you separated each thing you were doing with their own labels, it makes looking back at the data a lot easier as well as the comments within code are helpful for understanding what the code means as well. 
```{r}
library(tidyverse)
library(readxl)
library(corrplot)
library(viridis)
library(gridExtra)   #I learned about how to use different packages that I had not previously known how to use and how they can be used for cleaning and analyzing data. 

# Growth patterns across measures and years

# Letter-Word Identification Boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = LWID_growth, fill = year)) +
  facet_wrap(~"Letter-Word ID Growth") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Growth distribution violin plots
long_data <- data %>%
  pivot_longer(
    cols = ends_with("_growth"),
    names_to = "measure",
    values_to = "growth"
  )

ggplot(long_data, aes(x = measure, y = growth, fill = year)) +
  geom_violin() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Statistical summary by measure
growth_summary <- data %>%
  group_by(year) %>%
  summarize(
    across(ends_with("_growth"),
           list(
             mean = ~mean(., na.rm = TRUE),
             sd = ~sd(., na.rm = TRUE),
             n = ~sum(!is.na(.))
           ))
  )

print(growth_summary)

# Cross-domain comparison
ggplot(data) +
  geom_point(aes(x = RC_growth, y = Math_growth, color = year)) +
  geom_smooth(aes(x = RC_growth, y = Math_growth), method = "lm") +
  theme_minimal() + 
  facet_wrap(~year)
  labs(
    title = "Reading vs Math Growth Correlation",
       x = "Reading Growth",
       y = "Math Growth" 
  )
 
#Writing growth per year
#BOXPLOTS
#Writing Assesment
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = WA_growth, fill = year)) +
  facet_wrap(~"Writing Assesment Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Writing Fluency
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = WF_growth, fill = year)) +
  facet_wrap(~"Writing Fluency by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Writing Skills
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = WS_growth, fill = year)) +
  facet_wrap(~"Writing S Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle =.45, hjust = 1))

#Writing Assessment mean growth per year bar chart.
ggplot(growth_summary, aes(x = year, y = WA_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Writing Assesment Growth by Year",
    x = "Year",
    y = "Growth"
  )

#BAR CHARTS
#Writing Fluency mean growth per year bar chart.
ggplot(growth_summary, aes(x = year, y = WF_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Writing Fluency Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Writing Skills mean growth per year bar chart. 
ggplot(growth_summary, aes(x = year, y = WS_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Writing Skills Growth by Year",
    x = "Year",
    y = "Growth"
  )

#FACET WRAP (WRITING)
The use of Facet_wrap() in your graphs was a good choice because it condensed a lot of information into one graph.
#Reading growth per year
#BOXPLOTS
#Reading comprehension boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = RC_growth, fill = year)) +
  facet_wrap(~"Reading Comprehension Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Reading fluency boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = RF_growth, fill = year)) +
  facet_wrap(~"Reading Comprehension Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#Letter-Word Identification boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = LWID_growth, fill = year)) +
  facet_wrap(~"Letter-Word Identification Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#BAR CHARTS
#Reading comprehension mean growth per year bar chart
ggplot(growth_summary, aes(x = year, y = RC_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Average Reading Comprehension Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Reading fluency mean growth per year bar chart
ggplot(growth_summary, aes(x = year, y = RF_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Average Reading Fluency Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Letter-Word Identification mean growth per year bar chart
ggplot(growth_summary, aes(x = year, y = LWID_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Letter-Word Identification Growth by Year",
    x = "Year",
    y = "Growth"
  )

#FACET WRAP (READING)


#Math growth per year
#BOXPLOTS

# Math Fluency Growth Boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = MF_growth, fill = year)) +
  facet_wrap(~"Math Fluency Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Calculation Growth Boxplot
ggplot(data, aes(x = year)) +
  geom_boxplot(aes(y = CALC_growth, fill = year)) +
  facet_wrap(~"Calculation Growth by Year") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#BAR CHARTS
ggplot(growth_summary, aes(x = year, y = CALC_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Math Calculation Growth by Year",
    x = "Year",
    y = "Growth"
  )

ggplot(growth_summary, aes(x = year, y = MF_growth_mean, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Math Fluency Growth by Year",
    x = "Year",
    y = "Growth"
  )

#FACET WRAP (MATH)
```

```{r}
#Modifying growth summary.
growth_summary <- growth_summary [-2, ]
print(data)

growth_summary <- growth_summary %>% 
  select(-starts_with("WJ"))

growth_summary <- growth_summary %>% 
  select(-starts_with("ITBS"))
```

```{r data2-frame}
#Creating an alternative, clean version of the 'data' data frame, based on Nov 25 meeting
library(dplyr)

#removing rows for 2009-2010 data
data2 <- data %>%
  filter(year != "2009-2010")

#removing columns WJID_growth to Math_growth
columns_to_remove <- which(names(data2) == "WJ_LWID_growth"):which(names(data2) == "Math_growth")
data2 <- data2[, -columns_to_remove]

#Shifting 'ID' column to left of 'year'
data2 <- data2[, c("id", "year", setdiff(names(data2), c("id", "year")))]
```

```{r Pivot}
#Pivot_wider data frame
data_wide <- pivot_wider(data2, names_from = year, values_from = c(RC_growth, LWID_growth, WA_growth, RF_growth, WF_growth, WS_growth, CALC_growth, MF_growth))
data_wide

#Attempting to reorient data frame to long format
#df_long <- pivot_longer(df_wide, cols = ends_with(c("2008-2009","2015-2016", "2016-2017", "2023-2024"), names_to = "year", values_to(c(RC_growth, LWID_growth, WA_growth, RF_growth, WF_growth, WS_growth, CALC_growth, MF_growth))))
```

```{r data2-averages}
#Adding merged means columns (across academic domain measures) to 'data2' frame, for secondary research
averages_data2 <- data2

#Reading
averages_data2$reading <- (averages_data2$RC_growth + averages_data2$LWID_growth + averages_data2$RF_growth) / 3
averages_data2$reading <- round(averages_data2$reading, 2)

#Writing
averages_data2$writing <- (averages_data2$WA_growth + averages_data2$WF_growth + averages_data2$WS_growth) / 3
averages_data2$writing <- round(averages_data2$writing, 2)

averages_data2$math <- (averages_data2$CALC_growth + averages_data2$MF_growth) / 2
averages_data2$math <- round(averages_data2$math, 2)
```

```{r grand-means}
#Obtaining grand means for reading, writing, and math measures
mean_reading <- mean(averages_data2$reading, na.rm = TRUE)
mean_reading <- round(mean_reading, 2)
mean_reading

mean_writing <- mean(averages_data2$writing, na.rm = TRUE)
mean_writing <- round(mean_writing, 2)

mean_math <- mean(averages_data2$math, na.rm = TRUE)
mean_math <- round(mean_math, 2)
```

```{r avg-domain}
#Obtaining academic domain averages by year
#Reading
reading_by_year <- averages_data2 %>% 
  group_by(year) %>% 
  summarise(mean_reading = mean(reading, na.rm = TRUE))
reading_by_year

#Writing
writing_by_year <- averages_data2 %>% 
  group_by(year) %>% 
  summarise(mean_writing = mean(writing, na.rm = TRUE))
writing_by_year

#Math
math_by_year <- averages_data2 %>% 
  group_by(year) %>% 
  summarise(mean_math = mean(math, na.rm = TRUE))
math_by_year
I like the use of your descriptives table and including relevant means all in one table. It acts as an easy visual reference for a lot of variables that otherwise wouldn't be easy to compare side by side. 
#Merged table for academic growth averages, by year
library(knitr)

merged_means <- left_join(reading_by_year, writing_by_year, math_by_year, by = "year")
merged_means <- left_join(merged_means, math_by_year, by = "year")
merged_means

#Kable table of merged means
kable (merged_means, 
       col.names = c("Year", "mean_reading", "mean_writing", "mean_math"),
       caption = "Average growth by academic domain")
```

```{r}
# ?
#data <- data %>% 
#  group_by(year) %>% 
#  mutate(read_by_year = mean(RC_growth, na.rm = TRUE))
```
<<<<<<< Updated upstream

## Research Question 1

# Academic growth patterns across all years, and individual years
```{r}
# Growth patterns across measures and years

# Growth distribution violin plots
long_data <- data2 %>%
  pivot_longer(
    cols = ends_with("_growth"),
    names_to = "measure",
    values_to = "growth"
  )

long_data <- long_data %>%
  mutate(
    measure = case_when(
      measure == "CALC_growth" ~ "Calculation",
      measure == "MF_growth" ~ "Math Fluency",
      measure == "RC_growth" ~ "Reading Comprehension",
      measure == "LWID_growth" ~ "Letter-Word Identification",
      measure == "WA_growth" ~ "Writing Assessment",
      measure == "RF_growth" ~ "Reading Fluency",
      measure == "WF_growth" ~ "Writing Fluency",
      measure == "WS_growth" ~ "Writing Skills",
      TRUE ~ measure
    )
  )

# Reordering measures
long_data$measure <- factor(
  long_data$measure,
  levels = c(
    "Reading Comprehension", 
    "Letter-Word Identification", 
    "Reading Fluency", 
    "Writing Assessment", 
    "Writing Fluency",
    "Writing Skills",
    "Calculation", 
    "Math Fluency"
  )
)

#VIOLIN PLOT
#All Years
ggplot(long_data, aes(x = measure, y = growth, fill = year)) +
  geom_violin() +
  scale_fill_brewer(palette = "Set2") + 
  labs(
    title = "Distribution of Growth Measures", # PLot title
    subtitle = "Analysis of Various Measures Across Years Analyzed", # Subtitle 
    x = "Academic Measure", # X-axis label
    y = "Growth Value" # Y-axis label
  ) +
  theme_minimal(base_size = 15) + # Theme
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"), # Bold, angled X-axis text
    axis.text.y = element_text(face = "bold"), # Bold Y-axis text
    axis.title.x = element_text(face = "bold", size = 14), # Bold X-axis label
    axis.title.y = element_text(face = "bold", size = 14), # Bold Y-axis label
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5), # Bold, centered title
    plot.subtitle = element_text(size = 14, hjust = 0.5), # Centered subtitle
  )
```

```{violin-0809}
# Violin plot for measures across 2008-2009
#Renaming measures
long_data0809 <- long_data %>%
  filter(year == "2008-2009") %>%
  mutate(
    measure = case_when(
      measure == "CALC_growth" ~ "Calculation",
      measure == "MF_growth" ~ "Math Fluency",
      measure == "RC_growth" ~ "Reading Comprehension",
      measure == "LWID_growth" ~ "Letter-Word Identification",
      measure == "WA_growth" ~ "Writing Assessment",
      measure == "RF_growth" ~ "Reading Fluency",
      measure == "WF_growth" ~ "Writing Fluency",
      measure == "WS_growth" ~ "Writing Skills",
      TRUE ~ measure
    )
  )

# Reordering measures
long_data0809$measure <- factor(
  long_data0809$measure,
  levels = c(
    "Reading Comprehension", 
    "Letter-Word Identification", 
    "Reading Fluency", 
    "Writing Assessment", 
    "Writing Fluency",
    "Writing Skills",
    "Calculation", 
    "Math Fluency"
  )
)

#Year 2008-2009
violin_0809 <- subset(long_data0809, year == "2008-2009")

# Creating the subset violin plot for 2008-2009
ggplot(violin_0809, aes(x = measure, y = growth, fill = measure)) +
  geom_violin(trim = FALSE, alpha = 0.8) +
  stat_summary(fun = median, geom = "point", shape = 19, size = 3, color = "blue") + # Add median as a blue point
  stat_summary(fun = median, geom = "line", aes(group = 1), color = "blue", linetype = "solid") + # Connect medians with a line
  scale_fill_brewer(palette = "Set2") + 
  labs(
    title = "Distribution of Growth Measures (2008-2009)", 
    subtitle = "Analysis of Various Measures Across the Year", 
    x = "Academic Measure", 
    y = "Growth Value" 
  ) +
  theme_minimal(base_size = 15) + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"), 
    axis.text.y = element_text(face = "bold"),
    axis.title.x = element_text(face = "bold", size = 14), 
    axis.title.y = element_text(face = "bold", size = 14), 
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5), 
    plot.subtitle = element_text(size = 14, hjust = 0.5), 
    legend.position = "none" 
  )
```

```{r violin-1516}
# Violin plot for measures across 2015-2016
#Renaming measures
long_data1516 <- long_data %>%
  filter(year == "2015-2016") %>%
  mutate(
    measure = case_when(
      measure == "CALC_growth" ~ "Calculation",
      measure == "MF_growth" ~ "Math Fluency",
      measure == "RC_growth" ~ "Reading Comprehension",
      measure == "LWID_growth" ~ "Letter-Word Identification",
      measure == "WA_growth" ~ "Writing Assessment",
      measure == "RF_growth" ~ "Reading Fluency",
      measure == "WF_growth" ~ "Writing Fluency",
      measure == "WS_growth" ~ "Writing Skills",
      TRUE ~ measure
    )
  )

# Reordering measures
long_data1516$measure <- factor(
  long_data1516$measure,
  levels = c(
    "Reading Comprehension", 
    "Letter-Word Identification", 
    "Reading Fluency", 
    "Writing Assessment", 
    "Writing Fluency",
    "Writing Skills",
    "Calculation", 
    "Math Fluency"
  )
)

#Year 2015-2016
violin_1516 <- subset(long_data1516, year == "2015-2016")

# Creating the subset violin plot for 2015-2016
ggplot(violin_1516, aes(x = measure, y = growth, fill = measure)) +
  geom_violin(trim = FALSE, alpha = 0.8) +
  stat_summary(fun = median, geom = "point", shape = 19, size = 3, color = "blue") + 
  stat_summary(fun = median, geom = "line", aes(group = 1), color = "blue", linetype = "solid") + 
  scale_fill_brewer(palette = "Set2") + 
  labs(
    title = "Distribution of Growth Measures (2015-2016)", 
    subtitle = "Analysis of Various Measures Across the Year", 
    x = "Academic Measure", 
    y = "Growth Value" 
  ) +
  theme_minimal(base_size = 15) + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"), 
    axis.text.y = element_text(face = "bold"), 
    axis.title.x = element_text(face = "bold", size = 14), 
    axis.title.y = element_text(face = "bold", size = 14), 
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5), 
    plot.subtitle = element_text(size = 14, hjust = 0.5), 
    legend.position = "none"
  )
```

```{r violin-1617}
# Violin plot for measures across 2016-2017
#Renaming measures
long_data1617 <- long_data %>%
  filter(year == "2016-2017") %>%
  mutate(
    measure = case_when(
      measure == "CALC_growth" ~ "Calculation",
      measure == "MF_growth" ~ "Math Fluency",
      measure == "RC_growth" ~ "Reading Comprehension",
      measure == "LWID_growth" ~ "Letter-Word Identification",
      measure == "WA_growth" ~ "Writing Assessment",
      measure == "RF_growth" ~ "Reading Fluency",
      measure == "WF_growth" ~ "Writing Fluency",
      measure == "WS_growth" ~ "Writing Skills",
      TRUE ~ measure
    )
  )

# Reordering measures
long_data1617$measure <- factor(
  long_data1617$measure,
  levels = c(
    "Reading Comprehension", 
    "Letter-Word Identification", 
    "Reading Fluency", 
    "Writing Assessment", 
    "Writing Fluency",
    "Writing Skills",
    "Calculation", 
    "Math Fluency"
  )
)

#Year 2016-2017
violin_1617 <- subset(long_data1617, year == "2016-2017")

# Creating the subset violin plot for 2016-2017
ggplot(violin_1617, aes(x = measure, y = growth, fill = measure)) +
  geom_violin(trim = FALSE, alpha = 0.8) +
  stat_summary(fun = median, geom = "point", shape = 19, size = 3, color = "blue") + 
  stat_summary(fun = median, geom = "line", aes(group = 1), color = "blue", linetype = "solid") +
  scale_fill_brewer(palette = "Set2") + 
  labs(
    title = "Distribution of Growth Measures (2016-2017)", 
    subtitle = "Analysis of Various Measures Across the Year", 
    x = "Academic Measure", 
    y = "Growth Value" 
  ) +
  theme_minimal(base_size = 15) + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"), 
    axis.text.y = element_text(face = "bold"), 
    axis.title.x = element_text(face = "bold", size = 14), 
    axis.title.y = element_text(face = "bold", size = 14), 
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5), 
    plot.subtitle = element_text(size = 14, hjust = 0.5), 
    legend.position = "none"
  )
```

```{r violin-2324}
# Violin plot for measures across 2023-2024
#Renaming measures
long_data2324 <- long_data %>%
  filter(year == "2023-2024") %>%
  mutate(
    measure = case_when(
      measure == "CALC_growth" ~ "Calculation",
      measure == "MF_growth" ~ "Math Fluency",
      measure == "RC_growth" ~ "Reading Comprehension",
      measure == "LWID_growth" ~ "Letter-Word Identification",
      measure == "WA_growth" ~ "Writing Assessment",
      measure == "RF_growth" ~ "Reading Fluency",
      measure == "WF_growth" ~ "Writing Fluency",
      measure == "WS_growth" ~ "Writing Skills",
      TRUE ~ measure
    )
  )

# Reordering measures
long_data2324$measure <- factor(
  long_data2324$measure,
  levels = c(
    "Reading Comprehension", 
    "Letter-Word Identification", 
    "Reading Fluency", 
    "Writing Assessment", 
    "Writing Fluency",
    "Writing Skills",
    "Calculation", 
    "Math Fluency"
  )
)

#Year 2023-2024
violin_2324 <- subset(long_data2324, year == "2023-2024")

# Creating the subset violin plot for 2023-2024
ggplot(violin_2324, aes(x = measure, y = growth, fill = measure)) +
  geom_violin(trim = FALSE, alpha = 0.8) +
  stat_summary(fun = median, geom = "point", shape = 19, size = 3, color = "blue") + 
  stat_summary(fun = median, geom = "line", aes(group = 1), color = "blue", linetype = "solid") +
  scale_fill_brewer(palette = "Set2") + 
  labs(
    title = "Distribution of Growth Measures (2023-2024)", 
    subtitle = "Analysis of Various Measures Across the Year", 
    x = "Academic Measure", 
    y = "Growth Value" 
  ) +
  theme_minimal(base_size = 15) + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"), 
    axis.text.y = element_text(face = "bold"), 
    axis.title.x = element_text(face = "bold", size = 14), 
    axis.title.y = element_text(face = "bold", size = 14), 
    plot.title = element_text(face = "bold", size = 18, hjust = 0.5), 
    plot.subtitle = element_text(size = 14, hjust = 0.5), 
    legend.position = "none"
  )
```


## Research Question 2
```{r}
#Domain bar charts for Reading, Writing and Math per year. 

#Writing 
ggplot(writing_by_year, aes(x = year, y = mean_writing, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Average Writing Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Reading
ggplot(reading_by_year, aes(x = year, y = mean_reading, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Average Reading Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Math
ggplot(math_by_year, aes(x = year, y = mean_math, fill = year)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +
  labs(
    title = "Average Math Growth by Year",
    x = "Year",
    y = "Growth"
  )

#Merged_means tidy data set 

merged_means_tidy <- merged_means %>% 
  pivot_longer(
    cols = starts_with("mean_"),        
    names_to = "subject",             
    values_to = "score") %>%
  mutate(subject = sub("mean_", "", subject))

#All
ggplot(merged_means_tidy, aes(x = subject, y = score, fill = subject)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~year) +
  theme_minimal() +
  labs(
    title = "Average Growth by Year",
    x = "Year",
    y = "Growth"
  )
```
=======
>>>>>>> Stashed changes
